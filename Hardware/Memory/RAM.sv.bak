module ram (
	clk,
	wr, wr_mask,
	addr, data_in, data_out
);
	parameter ADDR_BITS = 10;
	parameter MEM_FILE = "";

	input clk;
	input wr;
	input [3:0] wr_mask;
	
	input [ADDR_BITS-1:0] addr;
	input [31:0] data_in;
	output reg [31:0] data_out;
	
	reg [3:0][7:0] memory [2**ADDR_BITS];
	// initial begin
	// 	if (MEM_FILE) 
	// 		$readmemh(MEM_FILE, memory);
	// end
	
	always_ff @(posedge clk) begin
		if (wr) begin
			for (int i = 0; i < 4; i++) begin
        		if(wr_mask[i]) 
					memory[addr][i] <= data_in[i*8+:8];
          	end
		end

		data_out <= memory[addr];
	end
endmodule