module PS2KeyboardController (CLK, RST, EN, dataPin, clkPin, dataRequest, data, dataValid);
	input CLK, RST, EN;
	input dataPin, clkPin;
	input dataRequest;
	
	output reg [7:0] data;
	output reg dataValid;
	
	reg [10:0] incomingData;
	wire allBitsReceived;
	wire transmittingData = dataValid && dataRequest;
	
	Counter #(12) bitCounter (
		.CLK(~clkPin),
		.EN(1),
		.RST(RST || transmittingData),
		.willOverflow(allBitsReceived)
	);
	
	task onPS2Clock;
		begin
			incomingData <= { dataPin, incomingData[10:1] };
		end
	endtask
	
	always @(negedge clkPin) begin
		onPS2Clock;
	end
	
	task saveData;
		begin
			data <= incomingData[8:1];
			dataValid <= 1'b1;
		end
	endtask
	
	task onReset;
		begin
			data <= 8'b0;
			dataValid <= 1'b0;
		end
	endtask
	
	task onClock;
		begin
			if(allBitsReceived)
				saveData();
					
			if(transmittingData)
				dataValid <= 1'b0;
		end
	endtask
	
	always @(posedge CLK or posedge RST) begin
		if (RST) onReset;
		else onClock;
	end
endmodule